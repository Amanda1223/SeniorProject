<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_server_1_1_imp_services" kind="class" language="C#" prot="public">
    <compoundname>Server::ImpServices</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IntServices</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_server_1_1_imp_services_1afc998ad2d0809f139fb0d9ef3be06e9a" prot="public" static="no" mutable="no">
        <type>ConcurrentDictionary&lt; string, <ref refid="class_server_1_1_connected_client" kindref="compound">ConnectedClient</ref> &gt;</type>
        <definition>ConcurrentDictionary&lt;string, ConnectedClient&gt; Server.ImpServices.m_connClients</definition>
        <argsstring></argsstring>
        <name>m_connClients</name>
        <initializer>= new ConcurrentDictionary&lt;string, <ref refid="class_server_1_1_connected_client" kindref="compound">ConnectedClient</ref>&gt;()</initializer>
        <briefdescription>
<para>ConcurrentDictionary [string, <ref refid="class_server_1_1_connected_client" kindref="compound">ConnectedClient</ref>] : where the dictionary is populated with [string]usernames and their [connectedClient]connection to the server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ImpServices.cs" line="33" column="1" bodyfile="ImpServices.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_server_1_1_imp_services_1a9754494dad7fe6ad9384d1a3b8fbe9f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Server.ImpServices.login</definition>
        <argsstring>(string a_username, ref List&lt; string &gt; a_userList)</argsstring>
        <name>login</name>
        <param>
          <type>string</type>
          <declname>a_username</declname>
        </param>
        <param>
          <type>ref List&lt; string &gt;</type>
          <declname>a_userList</declname>
        </param>
        <briefdescription>
<para>If the client picks a unique username, a connection will be made to the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_username</parametername>
</parameternamelist>
<parameterdescription>
<para>string : the username requested by the client</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_userList</parametername>
</parameternamelist>
<parameterdescription>
<para>List-strings : usernames to be a permanent copy for the client after a connection is made, passed by reference.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return 0 upon duplicate username existing, does not fully connect. return -1 upon error connecting to the server. return 1 upon success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ImpServices.cs" line="48" column="1" bodyfile="ImpServices.cs" bodystart="48" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1_1_imp_services_1abe719e81c6fdf7415e88b38e0cea104c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Server.ImpServices.sendToAll</definition>
        <argsstring>(string a_username, string a_msg)</argsstring>
        <name>sendToAll</name>
        <param>
          <type>string</type>
          <declname>a_username</declname>
        </param>
        <param>
          <type>string</type>
          <declname>a_msg</declname>
        </param>
        <briefdescription>
<para>Sends a message to all currently connected clients, excluding the sender. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_username</parametername>
</parameternamelist>
<parameterdescription>
<para>string : user sending the message to the client list</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>string : message to send to the client list.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ImpServices.cs" line="89" column="1" bodyfile="ImpServices.cs" bodystart="89" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1_1_imp_services_1aeab3a319745048feb7b8c37b15d3abc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Server.ImpServices.sendToUser</definition>
        <argsstring>(string a_source, string a_dest, string a_msg)</argsstring>
        <name>sendToUser</name>
        <param>
          <type>string</type>
          <declname>a_source</declname>
        </param>
        <param>
          <type>string</type>
          <declname>a_dest</declname>
        </param>
        <param>
          <type>string</type>
          <declname>a_msg</declname>
        </param>
        <briefdescription>
<para>Sends a message from one client to another. Destination client needs to be connected to the server. If the destination client is offline or does not exist, the user is unable to send messages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_source</parametername>
</parameternamelist>
<parameterdescription>
<para>string : the client requesting to send a message.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_dest</parametername>
</parameternamelist>
<parameterdescription>
<para>string : the final destination of the message.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>string : the message to send to the <emphasis>a_dest</emphasis>  client.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ImpServices.cs" line="112" column="1" bodyfile="ImpServices.cs" bodystart="112" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1_1_imp_services_1af0dbb9ea98cc78fc4d1a18eaa69a40a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Server.ImpServices.newClientConnection</definition>
        <argsstring>(string a_connected)</argsstring>
        <name>newClientConnection</name>
        <param>
          <type>string</type>
          <declname>a_connected</declname>
        </param>
        <briefdescription>
<para>When a different client connects to the server, the clients currently connected will receive an update to their client lists so they are aware of the change. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_connected</parametername>
</parameternamelist>
<parameterdescription>
<para>string : user that had connected.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ImpServices.cs" line="134" column="1" bodyfile="ImpServices.cs" bodystart="134" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1_1_imp_services_1a11f26ed8cd8554c43fa27bca4205e534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Server.ImpServices.disconnectionHandle</definition>
        <argsstring>(string a_disconnected)</argsstring>
        <name>disconnectionHandle</name>
        <param>
          <type>string</type>
          <declname>a_disconnected</declname>
        </param>
        <briefdescription>
<para>Ensures the user disconnects properly while updating the disconnection to the other connected clients. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_disconnected</parametername>
</parameternamelist>
<parameterdescription>
<para>string : user that is requesting a disconnect</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ImpServices.cs" line="162" column="1" bodyfile="ImpServices.cs" bodystart="162" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation for the operation contracts located in the Inter </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Server.ImpServices</label>
        <link refid="class_server_1_1_imp_services"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>IntServices</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Server.ImpServices</label>
        <link refid="class_server_1_1_imp_services"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>IntServices</label>
      </node>
    </collaborationgraph>
    <location file="ImpServices.cs" line="28" column="1" bodyfile="ImpServices.cs" bodystart="27" bodyend="197"/>
    <listofallmembers>
      <member refid="class_server_1_1_imp_services_1a11f26ed8cd8554c43fa27bca4205e534" prot="public" virt="non-virtual"><scope>Server::ImpServices</scope><name>disconnectionHandle</name></member>
      <member refid="class_server_1_1_imp_services_1a9754494dad7fe6ad9384d1a3b8fbe9f7" prot="public" virt="non-virtual"><scope>Server::ImpServices</scope><name>login</name></member>
      <member refid="class_server_1_1_imp_services_1afc998ad2d0809f139fb0d9ef3be06e9a" prot="public" virt="non-virtual"><scope>Server::ImpServices</scope><name>m_connClients</name></member>
      <member refid="class_server_1_1_imp_services_1af0dbb9ea98cc78fc4d1a18eaa69a40a6" prot="public" virt="non-virtual"><scope>Server::ImpServices</scope><name>newClientConnection</name></member>
      <member refid="class_server_1_1_imp_services_1abe719e81c6fdf7415e88b38e0cea104c" prot="public" virt="non-virtual"><scope>Server::ImpServices</scope><name>sendToAll</name></member>
      <member refid="class_server_1_1_imp_services_1aeab3a319745048feb7b8c37b15d3abc5" prot="public" virt="non-virtual"><scope>Server::ImpServices</scope><name>sendToUser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
